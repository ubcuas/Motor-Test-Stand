<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 13</value>
  </metadata>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>198, 19</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>